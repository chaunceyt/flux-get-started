---
# Source: drupal/charts/mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dev-drupal-mariadb
  namespace: project1
  labels:
    app: "mariadb"
    chart: mariadb-5.2.3
    release: "dev-drupal"
    heritage: "Tiller"
type: Opaque
data:
  mariadb-root-password: "VU1YWThxY3pGbQ=="

  mariadb-password: "dFlvblFLZjdXdQ=="
---
# Source: drupal/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dev-drupal-drupal
  namespace: project1
  labels:
    app: dev-drupal-drupal
    chart: drupal-3.0.0
    release: "dev-drupal"
    heritage: "Tiller"
type: Opaque
data:

  drupal-password: "cGFzc3dvcmQ="


---
# Source: drupal/charts/mariadb/templates/master-configmap.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-drupal-mariadb
  namespace: project1
  labels:
    app: mariadb
    component: "master"
    chart: mariadb-5.2.3
    release: "dev-drupal"
    heritage: "Tiller"
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci

    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8

    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: drupal/charts/mariadb/templates/tests.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-drupal-mariadb-tests
  namespace: project1
data:
  run.sh: |-
    @test "Testing MariaDB is accessible" {
      mysql -h dev-drupal-mariadb -uroot -p$MARIADB_ROOT_PASSWORD -e 'show databases;'
    }

---
# Source: drupal/templates/apache-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: dev-drupal-drupal-apache
  namespace: project1
  labels:
    app: dev-drupal-drupal
    chart: drupal-3.0.0
    release: "dev-drupal"
    heritage: "Tiller"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: drupal/templates/drupal-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: dev-drupal-drupal-drupal
  namespace: project1
  labels:
    app: dev-drupal-drupal
    chart: drupal-3.0.0
    release: "dev-drupal"
    heritage: "Tiller"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: drupal/charts/mariadb/templates/master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-drupal-mariadb
  namespace: project1
  labels:
    app: "mariadb"
    component: "master"
    chart: mariadb-5.2.3
    release: "dev-drupal"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app: "mariadb"
    component: "master"
    release: "dev-drupal"

---
# Source: drupal/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-drupal-drupal
  namespace: project1
  labels:
    app: dev-drupal-drupal
    chart: drupal-3.0.0
    release: "dev-drupal"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: https
  selector:
    app: dev-drupal-drupal

---
# Source: drupal/charts/mariadb/templates/test-runner.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "dev-drupal-mariadb-test-zyyx8"
  namespace: project1
  annotations:
    "helm.sh/hook": test-success
spec:
  initContainers:
    - name: "test-framework"
      image: "dduportal/bats:0.4.0"
      command:
        - "bash"
        - "-c"
        - |
          set -ex
          # copy bats to tools dir
          cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: mariadb-test
      image: docker.io/bitnami/mariadb:10.1.37
      imagePullPolicy: "IfNotPresent"
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      env:
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dev-drupal-mariadb
              key: mariadb-root-password
      volumeMounts:
      - mountPath: /tests
        name: tests
        readOnly: true
      - mountPath: /tools
        name: tools
  volumes:
  - name: tests
    configMap:
      name: dev-drupal-mariadb-tests
  - name: tools
    emptyDir: {}
  restartPolicy: Never

---
# Source: drupal/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dev-drupal-drupal
  namespace: project1
  labels:
    app: dev-drupal-drupal
    chart: drupal-3.0.0
    release: "dev-drupal"
    heritage: "Tiller"
spec:
  selector:
    matchLabels:
      app: dev-drupal-drupal
      release: "dev-drupal"
  replicas: 1
  template:
    metadata:
      labels:
        app: dev-drupal-drupal
        chart: drupal-3.0.0
        release: "dev-drupal"
    spec:
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - "status.localhost"
      containers:
      - name: drupal
        image: docker.io/bitnami/drupal:8.6.3
        imagePullPolicy: "IfNotPresent"
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        - name: MARIADB_HOST
          value: dev-drupal-mariadb
        - name: MARIADB_PORT_NUMBER
          value: "3306"
        - name: DRUPAL_DATABASE_NAME
          value: "bitnami_drupal"
        - name: DRUPAL_DATABASE_USER
          value: "bn_drupal"
        - name: DRUPAL_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dev-drupal-mariadb
              key: mariadb-password
        - name: DRUPAL_PROFILE
          value: "standard"
        - name: DRUPAL_USERNAME
          value: "admin"
        - name: DRUPAL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dev-drupal-drupal
              key: drupal-password
        - name: DRUPAL_EMAIL
          value: "user@example.com"
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        livenessProbe:
          httpGet:
            path: /user/login
            port: http
          initialDelaySeconds: 120

        readinessProbe:
          httpGet:
            path: /user/login
            port: http
          initialDelaySeconds: 30

        resources:
          requests:
            cpu: 300m
            memory: 512Mi

        volumeMounts:
        - name: drupal-data
          mountPath: /bitnami/drupal
        - name: apache-data
          mountPath: /bitnami/apache
      volumes:
      - name: drupal-data
        persistentVolumeClaim:
          claimName: dev-drupal-drupal-drupal
      - name: apache-data
        persistentVolumeClaim:
          claimName: dev-drupal-drupal-apache

---
# Source: drupal/charts/mariadb/templates/master-statefulset.yaml
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: dev-drupal-mariadb
  namespace: project1
  labels:
    app: "mariadb"
    chart: mariadb-5.2.3
    component: "master"
    release: "dev-drupal"
    heritage: "Tiller"
spec:
  selector:
    matchLabels:
      release: "dev-drupal"
      component: "master"
      app: mariadb
  serviceName: "dev-drupal-mariadb"
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "mariadb"
        component: "master"
        release: "dev-drupal"
        chart: mariadb-5.2.3
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "mariadb"
                  release: "dev-drupal"
      containers:
      - name: "mariadb"
        image: docker.io/bitnami/mariadb:10.1.37
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dev-drupal-mariadb
              key: mariadb-root-password
        - name: MARIADB_USER
          value: "bn_drupal"
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dev-drupal-mariadb
              key: mariadb-password
        - name: MARIADB_DATABASE
          value: "bitnami_drupal"
        ports:
        - name: mysql
          containerPort: 3306
        livenessProbe:
          exec:
            command: ["sh", "-c", "exec mysqladmin status -uroot -p$MARIADB_ROOT_PASSWORD"]
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command: ["sh", "-c", "exec mysqladmin status -uroot -p$MARIADB_ROOT_PASSWORD"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources:
          {}

        volumeMounts:
        - name: data
          mountPath: /bitnami/mariadb
        - name: config
          mountPath: /opt/bitnami/mariadb/conf/my.cnf
          subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: dev-drupal-mariadb
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: "mariadb"
          component: "master"
          release: "dev-drupal"
          heritage: "Tiller"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"

---
# Source: drupal/templates/ingress.yaml

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: "drupal8-dev-drupal-ing"
  namespace: project1
  labels:
    app: dev-drupal-drupal
    chart: drupal-3.0.0
    release: "dev-drupal"
    heritage: "Tiller"
  annotations:
spec:
  rules:
    - host: drupal8.18.218.162.42.nip.io
      http:
        paths:
          - path: /
            backend:
              serviceName: dev-drupal-drupal
              servicePort: 80
